{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/Users/zhou/Desktop/bdc.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res}26 May 2021, 02:22:55

{com}. global learner "svm"

. global y daily_0

. global x "daily_1-positive"

. gen i=_n

. preserve

. keep if i<145
{txt}(7 observations deleted)

{com}. drop i

. save data_train, replace
{txt}(note: file data_train.dta not found)
file data_train.dta saved

{com}. restore

. preserve

. keep if i>144
{txt}(144 observations deleted)

{com}. drop $y

. drop i

. save data_test, replace
{txt}(note: file data_test.dta not found)
file data_test.dta saved

{com}. restore

. preserve

. keep if i>144
{txt}(144 observations deleted)

{com}. keep $y

. gen index=_n-1

. save test_y, replace
{txt}(note: file test_y.dta not found)
file test_y.dta saved

{com}. restore

. use data_train, clear

. r_ml_stata $y $x, mlmodel($learner) in_prediction("in_pred")  cross_validation("CV") out_sample("data_test") out_prediction("out_pred") seed(10) save_graph_cv("graph_cv")
{txt}(note: file /var/folders/cg/c7mvpbk97nd5rh8rkw5zwn_w0000gn/T//S_11614.00000g not found)
file /var/folders/cg/c7mvpbk97nd5rh8rkw5zwn_w0000gn/T//S_11614.00000g saved
(0 observations deleted)
(note: file /var/folders/cg/c7mvpbk97nd5rh8rkw5zwn_w0000gn/T//S_11614.00000i not found)
file /var/folders/cg/c7mvpbk97nd5rh8rkw5zwn_w0000gn/T//S_11614.00000i saved
{res}      daily_0   daily_1   daily_2  ...  negative   neutral   positive
0    0.111966  0.030612  0.053203  ...  1.446809  3.921569  20.782504
1    0.131907  0.111966  0.030612  ...  1.254902  3.264151  19.506217
2    0.167792  0.131907  0.111966  ...  1.180000  3.428571  18.134104
3    0.057064  0.167792  0.131907  ...  0.916667  2.113208  17.492903
4    0.003655  0.057064  0.167792  ...  0.886792  1.559322  18.986158
..        ...       ...       ...  ...       ...       ...        ...
139  0.115015  0.267569  0.430004  ...  1.492537  1.833333  32.850000
140  0.258763  0.115015  0.267569  ...  1.634921  2.784314  35.883333
141  0.342304  0.258763  0.115015  ...  2.000000  3.594595  30.928529
142  0.339723  0.342304  0.258763  ...  2.549020  2.800000  30.006667
143  0.468150  0.339723  0.342304  ...  2.259259  4.552632  47.206140

[144 rows x 11 columns]
<class 'pandas.core.frame.DataFrame'>
Int64Index: 144 entries, 0 to 143
Data columns (total 11 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   daily_0   144 non-null    float64
 1   daily_1   144 non-null    float64
 2   daily_2   144 non-null    float64
 3   daily_3   144 non-null    float64
 4   daily_4   144 non-null    float64
 5   daily_5   144 non-null    float64
 6   daily_6   144 non-null    float64
 7   daily_7   144 non-null    float64
 8   negative  144 non-null    float64
 9   neutral   144 non-null    float64
 10  positive  144 non-null    float64
dtypes: float64(11)
memory usage: 13.5 KB
                                                      
                                                      
------------------------------------------------------
CROSS-VALIDATION RESULTS TABLE
------------------------------------------------------
The best score is:
0.14412755064441188
------------------------------------------------------
The best parameters are:
{c -(}'C': 11, 'gamma': 0.1{c )-}
11
0.1
------------------------------------------------------
The best estimator is:
SVR(C=11, gamma=0.1)
------------------------------------------------------
The best index is:
19
------------------------------------------------------
[0.52139005 0.24165748 0.19238094 0.30286211 0.31646487 0.34810558
 0.29561842]
{err}/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pandas/io/stata.py:2346: InvalidColumnName: 
Not all pandas column names were valid Stata variable names.
The following replacements have been made:

    0   ->   _0

If this is not what you expect, please make sure you have Stata-compliant
column names in your DataFrame (strings only, max 32 characters, only
alphanumerics and underscores, no Stata reserved words)

  warnings.warn(ws, InvalidColumnName)
{txt}(note: file in_pred.dta not found)
file in_pred.dta saved
{res}{txt}file out_pred.dta saved
{res}{txt}(note: file graph_cv.gph not found)
{res}{txt}(file graph_cv.gph saved)

{com}. 
. ereturn list

{txt}scalars:
              e(OPT_C) =  {res}11
          {txt}e(OPT_GAMMA) =  {res}.1
      {txt}e(TEST_ACCURACY) =  {res}.1441275506444119
     {txt}e(TRAIN_ACCURACY) =  {res}.9248098257375338
         {txt}e(BEST_INDEX) =  {res}95
   {txt}e(SE_TEST_ACCURACY) =  {res}.7585186347395519

{com}. use in_pred, clear

. gen id=_n

. sort id

. tw(line $y id, lc(green)) (line in_pred id, lc(orange)), xtitle("Units' Identifier") legend(order(1 "Actual" 2 "In-sample prediction")) note(LEARNER: $learner) plotregion(style(none)) scheme(s1mono)
{res}
{com}. graph save "Graph" "/Users/zhou/Desktop/in.gph"
{res}{txt}(file /Users/zhou/Desktop/in.gph saved)

{com}. use out_pred, clear

. merge 1:1 index using "test_y"
{res}{txt}{p 0 7 2}
(note: variable
index was 
long, now double to accommodate using data's values)
{p_end}

{col 5}Result{col 38}# of obs.
{col 5}{hline 41}
{col 5}not matched{col 30}{res}               0
{txt}{col 5}matched{col 30}{res}               7{txt}  (_merge==3)
{col 5}{hline 41}

{com}. tw(line $y index, lc(green)) (line out_sample_pred index, lc(orange)), xtitle("Units' Identifier") legend(order(1 "Actual" 2 "Out-sample prediction")) note(LEARNER: $learner) plotregion(style(none)) scheme(s1mono)
{res}
{com}. graph save "Graph" "/Users/zhou/Desktop/oout.gph"
{res}{txt}(file /Users/zhou/Desktop/oout.gph saved)

{com}. use CV, clear

. list in 1/10, table
{txt}
     {c TLC}{hline 7}{c -}{hline 11}{c -}{hline 12}{c -}{hline 11}{c TRC}
     {c |} {res}index   mean_tr~e   mean_tes~e   std_tes~e {txt}{c |}
     {c LT}{hline 7}{c -}{hline 11}{c -}{hline 12}{c -}{hline 11}{c RT}
  1. {c |} {res}    0   .92447282    .14346596   .75807907 {txt}{c |}
  2. {c |} {res}    1    .9209583    .07397653   .85457776 {txt}{c |}
  3. {c |} {res}    2   .91704313    .01291318   .92154414 {txt}{c |}
  4. {c |} {res}    3   .91314028   -.03214861   .95402108 {txt}{c |}
  5. {c |} {res}    4   .91195582   -.05881609   .96750207 {txt}{c |}
     {c LT}{hline 7}{c -}{hline 11}{c -}{hline 12}{c -}{hline 11}{c RT}
  6. {c |} {res}    5   .91129753   -.08245695   .96630912 {txt}{c |}
  7. {c |} {res}    6    .9102859   -.09801331   .95131151 {txt}{c |}
  8. {c |} {res}    7   .90944585   -.11184931   .92881492 {txt}{c |}
  9. {c |} {res}    8   .90869812   -.12226064   .90152548 {txt}{c |}
 10. {c |} {res}    9    .9082102    -.1283114   .87046604 {txt}{c |}
     {c BLC}{hline 7}{c -}{hline 11}{c -}{hline 12}{c -}{hline 11}{c BRC}

{com}. use out_pred , clear

{com}. 
. list
{txt}
     {c TLC}{hline 7}{c -}{hline 11}{c TRC}
     {c |} {res}index   out_sam~d {txt}{c |}
     {c LT}{hline 7}{c -}{hline 11}{c RT}
  1. {c |} {res}    0   .52139005 {txt}{c |}
  2. {c |} {res}    1   .24165748 {txt}{c |}
  3. {c |} {res}    2   .19238094 {txt}{c |}
  4. {c |} {res}    3   .30286211 {txt}{c |}
  5. {c |} {res}    4   .31646487 {txt}{c |}
     {c LT}{hline 7}{c -}{hline 11}{c RT}
  6. {c |} {res}    5   .34810558 {txt}{c |}
  7. {c |} {res}    6   .29561842 {txt}{c |}
     {c BLC}{hline 7}{c -}{hline 11}{c BRC}

. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/Users/zhou/Desktop/bdc.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res}26 May 2021, 02:27:10
{txt}{.-}
{smcl}
{txt}{sf}{ul off}